		
CREATE TABLE `livre`.`mes_livres` 
( `code` VARCHAR(20) NOT NULL , `titre` VARCHAR(255) NOT NULL , 
`auteur` VARCHAR(255) NOT NULL , `photo` BLOB NOT NULL , PRIMARY KEY (`code`)) ENGINE = InnoDB;



String path = null;
    byte[] userimage = null;
    Connection con;
    PreparedStatement pst;
    ResultSet rs;




		======== OUVRIR L'IMAGE ========
	
 JFileChooser pic = new JFileChooser();
        pic.showOpenDialog(null);

        File picture = pic.getSelectedFile();

        path = picture.getAbsolutePath();
        BufferedImage img;
        try {
            img = ImageIO.read(pic.getSelectedFile());
            ImageIcon imageic = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(135, 127, Image.SCALE_DEFAULT));
            image1.setIcon(imageic);
            File image = new File(path);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buff = new byte[1024];

            for (int i; (i = fis.read(buff)) != -1;) {
                bos.write(buff, 0, i);
            }

            userimage = bos.toByteArray();
        } catch (Exception e) {
            e.printStackTrace();
        }



		======== ENREGISTREMENT ========



        String code = txtcode.getText();
        String titre = txttitre.getText();
        String auteur = txtauteur.getText();
        
        try {
            File image = new File(path);
            FileInputStream fis = new FileInputStream(image);
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/livre", "root", "");
            pst = con.prepareStatement("insert into mes_livres(code,titre,auteur,photo)"
                    + "values (?,?,?,?)");
            pst.setString(1, code);
            pst.setString(2, titre);
            pst.setString(3, auteur);
            pst.setBytes(4, userimage);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Ajouter");
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "" + e.getMessage());
        }


		======== SELECTIONNER ========


try {

            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/livre", "root", "");
            String sql = "select * from mes_livres where code =?";
            pst  = con.prepareStatement(sql);
            pst.setString(1, txtcode.getText());
            rs = pst.executeQuery();
            if (rs.next()== false) {

                JOptionPane.showMessageDialog(null, "Matricule n'existe pas");
                
            }
            else{
                txttitre.setText(rs.getString(2).trim());
                txtauteur.setText(rs.getString(3).trim());
                Blob blob1 = rs.getBlob("photo");
                byte[] imagebyte = blob1.getBytes(1, (int) blob1.length());

                ImageIcon image = new ImageIcon(new ImageIcon(imagebyte).getImage().getScaledInstance(135, 127, Image.SCALE_DEFAULT));
                image1.setIcon(image);
            }
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur " +e.getMessage());
            e.printStackTrace();
        }